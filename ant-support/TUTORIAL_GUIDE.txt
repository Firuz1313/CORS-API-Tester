============================
ИНСТРУКЦИЯ ПО ПОДСКАЗКАМ (ТУТОРИАЛАМ)
============================

1. Что было сделано:
---------------------
- В проекте реализован контекст TutorialContext, который управляет состоянием туториала (подсказок по шагам).
- Для каждого шага туториала появляется всплывающая подсказка (tooltip) возле нужного элемента на странице.
- В tooltip добавлены две кнопки: "Далее" и "Назад". Кнопки позволяют переходить между шагами туториала.
- Кнопка "Назад" скрыта на первом шаге, "Далее" — на последнем.
- Tooltip и кнопки создаются динамически через DOM-операции внутри useEffect в TutorialContext.js.
- Для перехода между шагами используются функции nextStep и prevStep из контекста.

2. Как создать новую подсказку (туториал):
-------------------------------------------
1) Открой файл src/tutorials.js
2) Добавь новый объект в tutorials, например:

export const tutorials = {
  myNewTutorial: {
    title: 'Название туториала',
    steps: [
      {
        page: '/some-page',
        targetSelector: '#some-element', // CSS-селектор для подсвечиваемого элемента
        title: 'Шаг 1: ...',
        description: 'Описание для первого шага',
        position: 'top', // top, bottom, left, right, center
      },
      {
        page: '/some-page',
        targetSelector: '#another-element',
        title: 'Шаг 2: ...',
        description: 'Описание для второго шага',
        position: 'right',
      },
      // ... другие шаги ...
      {
        page: '/some-page',
        isFinal: true, // последний шаг
        title: 'Завершение',
        description: 'Поздравляем! Вы прошли обучение.',
        position: 'center',
      }
    ]
  },
  // ... другие туториалы ...
}

3) Для каждого шага укажи:
   - page: путь страницы, где должен появиться шаг
   - targetSelector: CSS-селектор элемента, к которому "привязывается" подсказка
   - title: заголовок шага
   - description: текст подсказки
   - position: положение подсказки относительно элемента (top, bottom, left, right, center)
   - isFinal: true — если это последний шаг

4) Для запуска туториала вызови функцию startTutorial из контекста TutorialContext, например:
   startTutorial('myNewTutorial')
   (обычно это делается по кнопке или событию)

5) Всё! Подсказки будут появляться с кнопками "Далее" и "Назад" автоматически.

3. Как реализовать такой же функционал в другом проекте:
--------------------------------------------------------
- Скопируй файл TutorialContext.js и tutorials.js в свой проект.
- Подключи TutorialProvider в корневом компоненте (например, в App.js):
  <TutorialProvider> ... </TutorialProvider>
- Используй useTutorial() для доступа к функциям запуска и управления туториалом.
- Добавь стили из tutorial.css для подсветки и tooltip.
- Описывай шаги туториала в tutorials.js по аналогии.
- Tooltip и кнопки будут работать автоматически, если структура и селекторы элементов совпадают.

4. Важно:
---------
- Для корректной работы targetSelector должен указывать на реально существующий элемент на странице.
- Если элемент появляется динамически, убедись, что он уже в DOM к моменту показа шага.
- Если нужно изменить внешний вид кнопок — правь стили в tutorial.css или прямо в HTML tooltip в TutorialContext.js.

Если нужна автоматизация или генерация примера — просто напиши:
"Создай туториал из 3 шагов для страницы /profile с подсветкой кнопки #edit, поля #username и кнопки #save."

---
Автор инструкции: AI-помощник
2024 